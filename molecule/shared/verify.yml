---
# This is an example playbook to execute goss tests.
# Tests need distributed to the appropriate ansible host/groups
# prior to execution by `goss validate`.

- name: Verify
  hosts: all
  become: true
  vars:
    goss_version: v0.3.20
    goss_arch: amd64
    goss_dst: /usr/bin/goss
    # yamllint disable-line rule:line-length
    goss_sha256sum: 459bc14662967d07795234374a04d611cd2f821140eb4225e7d9ba4572630e11
    # yamllint disable-line rule:line-length
    goss_url: "https://github.com/goss-org/goss/releases/download/{{ goss_version }}/goss-linux-{{ goss_arch }}"
    goss_test_directory: /etc/goss.d
    goss_format: tap
  tasks:
    - name: Download and install Goss
      get_url:
        url: "{{ goss_url }}"
        dest: "{{ goss_dst }}"
        checksum: "sha256:{{ goss_sha256sum }}"
        mode: 0755
      register: download_goss
      until: download_goss is succeeded
      retries: 3

    - name: "Ensure {{ goss_test_directory }} exists"
      file:
        path: "{{ goss_test_directory }}"
        state: directory
        mode: 0755

    - name: Copy Goss tests to remote
      copy:
        src: "{{ item }}"
        dest: "{{ goss_test_directory }}/{{ item | basename }}"
        mode: 0644
      with_fileglob:
        - "{{ lookup('env', 'MOLECULE_VERIFIER_TEST_DIRECTORY') }}/test_*.yaml"

    - name: Register test files
      shell: "ls {{ goss_test_directory }}/test_*.yaml"
      changed_when: false
      register: test_files

    - name: Execute Goss tests
      command: "{{ goss_dst }} -g {{ item }} validate -f {{ goss_format }}"
      changed_when: false
      register: test_results
      with_items: "{{ test_files.stdout_lines }}"

    - name: Display details about the Goss results
      debug:
        msg: "{{ item.stdout_lines }}"
      with_items: "{{ test_results.results }}"

    - name: Fail when tests fail
      fail:
        msg: "Goss failed to validate"
      when: item.rc != 0
      with_items: "{{ test_results.results }}"
